{
    "realm": "ai-agent-realm",
    "enabled": true,
    "users": [
        {
            "username": "testuser",
            "enabled": true,
            "emailVerified": false,
            "firstName": "Test",
            "lastName": "User",
            "email": "testuser@example.com",
            "credentials": [
                {
                    "type": "password",
                    "value": "testpassword",
                    "temporary": false
                }
            ]
        }
    ],
    "clients": [
        {
            "clientId": "ai-agent-client",
            "name": "AI Agent Client",
            "description": "Client for AI Agent Platform APIs",
            "rootUrl": "${env.PUBLIC_URL}",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "your-keycloak-client-secret",
            "redirectUris": [
                "${env.PUBLIC_URL}/*"
            ],
            "webOrigins": [
                "${env.PUBLIC_URL}"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "client.secret.creation.time": "1708723331",
                "backchannel.logout.session.required": "true",
                "backchannel.logout.revoke.offline.tokens": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "redirect.uris": "${env.PUBLIC_URL}/*",
                "frontchannel.logout.url": "",
                "display.on.consent.screen": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "include.in.token.scope": "true",
                        "id.token.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "clientId",
                        "user.session.note": "clientId"
                    }
                },
                {
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "include.in.token.scope": "true",
                        "id.token.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "user.session.note": "clientHost"
                    }
                },
                {
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "include.in.token.scope": "true",
                        "id.token.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "user.session.note": "clientAddress"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "microprofile-jwt",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access"
            ],
            "access": {
                "view": true,
                "configure": true,
                "manage": true
            }
        },
        {
            "clientId": "ai-agent-web-client",
            "name": "AI Agent Web Client",
            "description": "Client for AI Agent Platform Web App",
            "rootUrl": "${env.PUBLIC_URL}",
            "adminUrl": "",
            "baseUrl": "/dashboard",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "your-keycloak-client-secret",
            "redirectUris": [
                "${env.PUBLIC_URL}/*"
            ],
            "webOrigins": [
                "${env.PUBLIC_URL}"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "access.token.signed.response.alg": "RS256",
                "backchannel.logout.session.required": "true",
                "backchannel.logout.revoke.offline.tokens": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "redirect.uris": "${env.PUBLIC_URL}/*",
                "display.on.consent.screen": "false",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
                "web-origins",
                "role_list",
                "acr",
                "profile",
                "roles",
                "microprofile-jwt",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access"
            ],
            "access": {
                "view": true,
                "configure": true,
                "manage": true
            }
        }
    ],
    "defaultRoles": [
        "offline_access",
        "uma_authorization"
    ],
    "requiredActions": [
        {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": true,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        }
    ],
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
        "jboss-logging-success",
        "jboss-logging-error"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false
}